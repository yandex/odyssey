storage "postgres_server" {
	type "remote"

	host "127.0.0.1"
	port 5432
}

database "scram_db" {
	user "backend_auth_with_correct_password" {
		authentication "none"

		storage "postgres_server"
		storage_db "scram_db"
		storage_user "scram_user"
		storage_password "scram_user_password"

		pool "session"
	}

	user "backend_auth_with_incorrect_password" {
		authentication "none"

		storage "postgres_server"
		storage_db "scram_db"
		storage_user "scram_user"
		storage_password "not_scram_user_password"

		pool "session"
	}

	user "frontend_auth_plain" {
		authentication "scram-sha-256"
		password "correct_password"

		storage "postgres_server"
		storage_db "scram_db"
		storage_user "scram_user"
		storage_password "scram_user_password"

		pool "session"
	}

	user "frontend_auth_scram_secret" {
		authentication "scram-sha-256"
		password "SCRAM-SHA-256$4096:THzbzuckxnvrH94wNptooQ==$LNODWWqZwoRU9UlkRlh1XzV+mi4BT2VkaAlikOLkdhw=:4d5cNgUHYb2vpHIHohG7j/Ww6I1u/KQgxPhA+68jZOI="

		storage "postgres_server"
		storage_db "scram_db"
		storage_user "scram_user"
		storage_password "scram_user_password"

		pool "session"
	}
}

daemonize yes
pid_file "/var/run/odyssey.pid"

unix_socket_dir "/tmp"
unix_socket_mode "0644"

locks_dir "/tmp"

log_format "%p %t %l [%i %s] (%c) %m\n"
log_file "/var/log/odyssey.log"
log_to_stdout no
log_config yes
log_debug no
log_session yes
log_stats no
log_query no

coroutine_stack_size 24

listen {
	host "127.0.0.1"
	port 6432

	# do not exists, just to make sure we do not offer scram-sha256-plus
	tls "allow"
	tls_key_file "/tls-compat/server.key"
	tls_cert_file "/tls-compat/server.pem"
	tls_ca_file "/tls-compat/root.pem"
	tls_protocols "tlsv1.2"
}
