name: CMake

on: [push]

jobs:
  build_and_release:
    strategy:
        fail-fast: false
        matrix:
          # os: [ubuntu-latest, ubuntu-18.04]
          os : [ubuntu-18.04]
          compiler: [gcc, clang]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Before install
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get -y --no-install-recommends install postgresql-13 postgresql-server-dev-13 clang-format-9 libpam0g-dev libldap-dev
        sudo pkill -9 postgres || true
        echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      
    - name: Format
      continue-on-error: true
      run: ./run-clang-format/run-clang-format.py -r --clang-format-executable clang-format-9 modules sources stress test third_party
    
    - name: Test
      env:
        CC: ${{ matrix.compiler }}
        CC_FOR_BUILD: ${{ matrix.compiler }}
      run: make run_test
      
    - name: Prepare for release
      run: tar -zcf odyssey.linux-amd64.$(git rev-parse --short HEAD).tar.gz sources

    - name: Release
      uses: fnkr/github-action-ghr@v1
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-18.04' && matrix.compiler == 'gcc' # We need to release only once
      env:
        GHR_PATH: odyssey.linux-amd64.$(git rev-parse --short HEAD).tar.gz
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}